---

name: "Build-Test-Push"

on:
  workflow_call:
    inputs:
      image:
        description: 'Image to build'
        required: true
        type: string
      tag:
        description: 'Tag to apply to the image'
        required: true
        type: string
      base_image:
        description: 'Base image to use'
        type: string
        required: false
      registry:
        description: 'Registry to push to'
        required: false
        type: string
        default: 'ghcr.io'
    outputs:
      image_url:
        description: 'URL of the image'
        value: ${{ jobs.build-devcontainer-image.outputs.image_url }}

jobs:
  build-devcontainer-image:
    runs-on: ubuntu-latest
    permissions:
          contents: read
          packages: write
    outputs:
      image_url: ${{ steps.publish_image.outputs.image_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install devcontainer cli
        run: |
          npm install -g @devcontainers/cli
          devcontainer --version

      - name: Build the devcontainer image
        id: build_devcontainer_image
        run: |
          echo "Building the image: ${{ inputs.image }}:${{ inputs.tag }}"
          ./test/pre_build.sh ${{ inputs.image }} ${{ inputs.tag }} ${{ inputs.base_image }}

      - name: Test the image
        if: ${{ !env.ACT }}
        run: |
          echo "Testing the image"
          ./test/test_build.sh ${{ inputs.image }} ${{ inputs.tag }}

      - name: Login to GitHub Container Registry
        if: ${{ !env.ACT }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image
        id: publish_image
        run: |
          echo "Publishing image"
          PUBLIC_IMAGE_NAME="${{ inputs.registry }}/${{ github.event.repository.full_name }}/${{ inputs.image }}:${{ inputs.tag }}"
          docker tag ${{ inputs.image }}:${{ inputs.tag }} $PUBLIC_IMAGE_NAME
          docker rmi ${{ inputs.image }}:${{ inputs.tag }}
          docker push $PUBLIC_IMAGE_NAME
          echo "Image available at: $PUBLIC_IMAGE_NAME"
          echo "image_url=${{ inputs.registry }}/${{ github.event.repository.full_name }}/${{ inputs.image }}" >> $GITHUB_OUTPUT
